[  {    "type": "get",    "url": "/routes/:tagAddress",    "title": "Estado atual da rota pra uma tag",    "name": "GetRoute",    "group": "Route",    "version": "0.0.1",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "passedOrder",            "description": "<p>Lista com objetos contendo id e se o scanner registrado estava ou não na rota.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "position",            "description": "<p>Posição atual da tag na rota (por exemplo, 1 de 5 scanners no total).</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "total",            "description": "<p>Total de scanners que a tag deve passar (por exemplo, 1 de 5 scanners no total).</p>"          },          {            "group": "Success 200",            "type": "Array",            "optional": false,            "field": "skipped",            "description": "<p>Lista com scanners da rota que foram pulados (não registrada sua passagem por ele).</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "    HTTP/1.1 200 OK\n{\n    \"passedOrder\": [\n        {\n            \"scannerId\": 0,\n            \"isOnRoute\": false\n        },\n        {\n            \"scannerId\": 150,\n            \"isOnRoute\": true\n        }\n    ],\n    \"position\": 1,\n    \"skipped\": [120],\n    \"total\": 2\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>O cadastro não pode ser processado.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "   HTTP/1.1 400 Bad Request\n{\n   \"message\": \"Não há rota ativa para esta tag no momento!'\"\n }",          "type": "json"        }      ]    },    "filename": "controllers/routes.js",    "groupTitle": "Route"  },  {    "type": "post",    "url": "/routes/",    "title": "Registra uma nova rota pra uma tag",    "name": "RegisterRoute",    "group": "Route",    "version": "0.0.1",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Array",            "optional": false,            "field": "scannersIds",            "description": "<p>Array com os scanners que compõem a rota (a ordem importa).</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tagAddress",            "description": "<p>Mac Address da tag que deve fazer a rota.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "tagAddress",            "description": "<p>Mac Address da tag que possui a nova rota.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"tagAddress\": \"ABC1234\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>O cadastro não pode ser processado.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "   HTTP/1.1 400 Bad Request\n{\n   \"message\": \"Um ou mais scanners não foram encontrados!\"\n }",          "type": "json"        }      ]    },    "filename": "controllers/routes.js",    "groupTitle": "Route"  },  {    "type": "put",    "url": "/routes/:tagAddress&:activated",    "title": "Ativa ou desativa serviço de rastreio da rota",    "name": "UpdateRoute",    "group": "Route",    "version": "0.0.1",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "tagAddress",            "description": "<p>Mac Address da tag que teve a rota atualizada.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"tagAddress\": \"ABC1234\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>A atualização não pode ser processada.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "   HTTP/1.1 400 Bad Request\n{\n   \"message\": \"Não há rota para esta tag no momento\"\n }",          "type": "json"        }      ]    },    "filename": "controllers/routes.js",    "groupTitle": "Route"  },  {    "type": "delete",    "url": "/scanners/:deviceId",    "title": "Deleta um scanner do mapa",    "name": "DeleteScanner",    "group": "Scanner",    "version": "0.0.1",    "description": "<p>Requer usuário administrador autenticado.</p>",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "geojson",            "description": "<p>Geojson com novo scanner para ser substituído no mapa.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"geojson\": ...\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>O cadastro não pode ser processado.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "   HTTP/1.1 400 Bad Request\n{\n   \"message\": \"Scanner não encontrado!\"\n }",          "type": "json"        }      ]    },    "filename": "controllers/scanners.js",    "groupTitle": "Scanner"  },  {    "type": "post",    "url": "/scanners/",    "title": "Registra um novo scanner",    "name": "RegisterScanner",    "group": "Scanner",    "version": "0.0.1",    "description": "<p>Requer usuário administrador autenticado.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "lat",            "description": "<p>Latitude do local do scanner.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "lng",            "description": "<p>Longitude do local do scanner.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "deviceId",            "description": "<p>Informação contida na parte de trás do aparelho físico.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "level",            "description": "<p>Andar do scanner (0 é o térreo).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "geojson",            "description": "<p>Geojson com novo scanner para ser substituído no mapa.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"geojson\": ...\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "BadRequest",            "description": "<p>O cadastro não pode ser processado.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "   HTTP/1.1 400 Bad Request\n{\n   \"message\": \"Mapa não encontrado!\"\n }",          "type": "json"        }      ]    },    "filename": "controllers/scanners.js",    "groupTitle": "Scanner"  },  {    "type": "post",    "url": "/users/login",    "title": "Login de um usuário",    "name": "Login",    "group": "User",    "version": "0.0.1",    "description": "<p>Salva um cookie com token do usuário e redireciona para o dashboard.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Nome de usuário.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Senha.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "Unauthorized",            "description": "<p>CPF/CNPJ ou senha incorretos.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "    HTTP/1.1 401 Unauthorized\n{\n    \"success\": false,\n    \"message\": \"O CPF/CNPJ ou a senha não estão corretos.\"\n  }",          "type": "json"        }      ]    },    "filename": "controllers/users.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/users/logout",    "title": "Desloga o usuário",    "name": "Logout",    "group": "User",    "version": "0.0.1",    "description": "<p>Limpa o cookie com token do usuário e redireciona pra página de login.</p>",    "filename": "controllers/users.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/users/register",    "title": "Registro de um usuário",    "name": "RegisterUser",    "group": "User",    "version": "0.0.1",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Nome completo.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Senha contendo de 4 a 20 caracteres.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email único do usuário.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>Nome de usuário.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "birthday",            "description": "<p>Data de nascimento obedescendo o formato DD/MM/YYYY.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Telefone do usuário.</p>"          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "optional": false,            "field": "Content-Type",            "description": "<p>(application/json).</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Resultado da operação.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Informações referentes ao resultado da operação.</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n  \"success\": \"true\",\n  \"message\": \"Usuário cadastrado com sucesso.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UnprocessableEntity",            "description": "<p>O cadastro não pode ser processado.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "    HTTP/1.1 422 Unprocessable Entity\n{\n    \"success\": false,\n    \"message\": \"Usuário não pode ser cadastrado.\",\n    \"errors\": [\n        \"Data de nascimento inválida\",\n        \"Nome de usuário já cadastrado\",\n        \"Email inválido\",\n        \"Senha deve conter 4 a 20 caracteres\",\n        \"Nome não informado\"\n    ]\n  }",          "type": "json"        }      ]    },    "filename": "controllers/users.js",    "groupTitle": "User"  }]
